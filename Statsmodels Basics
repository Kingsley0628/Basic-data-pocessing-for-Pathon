一点基础知识：
    截尾&拖尾
        --截尾：指ACF或PACF在某阶后均为0的性质
        --拖尾：指ACF或PACF并不在某阶后均为0的性质
    模型定阶
        --AR：ACF拖尾，PACF截尾
        --MA：ACF截尾，PACF拖尾
        --ARMA：ACF和PACF均拖尾
    平稳性检验
        --一般所说平稳时间序列是指弱平稳时间序列
        --mean = constant; 存在二阶矩; 对所有时间t和时滞k, 自协方差相同
        --Unit Root test, including DF test, ADF test, PP test, et
        --The null hypothesis of the Augmented Dickey-Fuller is that there is a unit root
        --If the pvalue is above a critical size, then we cannot reject that there is a unit root
    非平稳转平稳

    建模
        --AR模型
        --MA模型
        --ARMA模型    
        --ARCH模型
            波动聚集+杠杆效应
            步骤：均值模型（消除线性依赖）-均值残差检验（ARCH效应？）-波动率模型
        --GARCH模型
            GARCH与ARMA相似，但一个是针对波动率，另一个则针对均值模型
            GARCH定阶较难，常采用低阶模型，如GARCH（1,1），GARCH（1,2）等
            ·

Coding:
    ACF & PACF coding:
        import statsmodels.tsa.api as smt
        help(smt.stattools.acf)
        '''
        acf(x, unbiased=False, nlags=40, qstat=False, fft=False, alpha=None, missing='none')
        x: array, time series data
        nlags: int, default is 40
        qstat: bool, if True, returns the Ljung-Box Q-statistic
        alpha: scalar, confidence interval is 1-alpha
        '''

        help(smt.stattools.pacf)
        '''
        pacf(x, nlags=40, method='ywunbiased', alpha=None)
        x: array, time series data
        nlags: int, default is 40
        method: {'ywunbiased', 'ywmle', 'ols'}
            --ywunbiased: default, yule walker with bias correction in denominator for acovf
            --ywmle: yule walker without bias correction
            --ols: regression of time series on lags of it and on constant
        alpha: scalar, confidence interval is 1-alpha
        '''
    
    ADF test coding:
        import statsmodels as sm
        sm.tsa.stattools.adfuller(x, maxlag=None, regression='c', autolag='AIC', store=False, regresults=False) # ADF检验
        '''
        x: data series 
        regression: {'c', 'ct', 'ctt', 'nc'}
            c: constant only
            ct: constant and trend
            ctt: constant, and linear and quadratic trend
            nc: no constant, no trend
        autolag: {'AIC', 'BIC', 't-stat', None}
            None: maxlag is used 
            t-stat: based choice of maxlag. Starts with maxlag and drops a lag until the t-statistic on the last lag length is significant using a 5%-sized test
            regresults: bool, if True, full regression results are returned

        '''
        The Dickey-Fuller GLS test is an improved version of the ADF which uses a GLS-detrending regression 
        before running an ADF regression with no additional deterministic terms. 
        This test is only available with a constant or constant and time trend.
        '''
        from unitroot import DFGLS
        dfgls = DFGLS()
    
    PP test
        from arch.unitroot import PhillipsPerron
        pp = PhillipsPerron(data, lags, trend, test_type)
        # test_type = {'tau', 'rho'}

        # adf.regression 用于展示ADF检验的结果，使用summary().as_text()输出

    Arch & Garch coding:
        from arch import arch_model
        arch_model(y, x=None, mean='Constant', lags=0, vol='Garch', 
                  p=1, o=0, q=1, power=2.0, dist='Normal', hold_back=None)
        '''
        y: 因变量
        x：外生变量
        mean: {'Constant', 'Zero', 'LS', 'AR', 'ARX', 'HAR', 'HARX'} # mean model mode 
        vol: {'GARCH', 'ARCH', 'EGARCH', 'FIARCH', 'HARCH'} # volatility model mode 
        p: Lag order of the symmetric innovation
        o: Lag order of the asymmetric innovation
        q: Lag order of lagged volatility or equivalent
            '''
            when o=1, the function is GJR-GARCH process
            when power=1 (default 2), the function is TARCH/ZARCH process
            '''
        dist: {'Normal', 'Students's t', 'Skewed Students't', Generalized Error Distribution'} # error distribution

        # when making a simple test, data could be loaded from arch.data.sp500

        # 拟合函数
        am = arch_model()
        res = am.fit()
            res.sumamry 展示结果
            res.plot 结果绘图



    
        
        